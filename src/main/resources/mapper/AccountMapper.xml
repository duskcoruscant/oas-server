<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hwenbin.server.mapper.AccountMapper">

    <resultMap id="AccountMap" type="com.hwenbin.server.entity.Account">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="register_time" jdbcType="TIMESTAMP" property="registerTime"/>
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime"/>
    </resultMap>

    <resultMap id="AccountWithRoleMap" type="com.hwenbin.server.dto.AccountWithRole" extends="AccountMap">
<!--        <result column="role_id" jdbcType="BIGINT" property="roleId"/>-->
<!--        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>-->
        <collection property="roles" ofType="com.hwenbin.server.dto.AccountWithRole$SimpleRole">
            <result column="role_id" property="roleId"/>
            <result column="role_name" property="roleName"/>
            <result column="role_code" property="roleCode"/>
            <result column="role_status" property="roleStatus"/>
        </collection>
    </resultMap>

    <resultMap id="AccountWithRolePermissionMap" type="com.hwenbin.server.dto.AccountWithRolePermission"
               extends="AccountWithRoleMap">
        <!-- 1角色对应多权限 -->
        <collection property="permissionCodeList" ofType="String">
            <result column="permission_code" jdbcType="VARCHAR" property="code"/>
        </collection>
    </resultMap>

    <select id="findDetailBy" resultMap="AccountWithRolePermissionMap">
        SELECT
        a.*,
        r.id as role_id,
        r.name as role_name,
        r.code as role_code,
        r.status as role_status,
        p.code as permission_code
        FROM account a
        LEFT JOIN account_role ar ON a.id = ar.account_id
        LEFT JOIN role r ON ar.role_id = r.id
        LEFT JOIN role_permission rp ON r.id = rp.role_id
        LEFT JOIN permission p ON rp.permission_id = p.id
        <where>
            <if test="id != null">a.id = #{id}</if>
            <if test="email != null">a.email = #{email}</if>
            <if test="nickname != null">a.nickname = #{nickname}</if>
        </where>
    </select>

    <update id="updateLoginTimeByName">
        UPDATE account
        SET login_time = NOW()
        WHERE nickname = #{nickname}
    </update>

</mapper>